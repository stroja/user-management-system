// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI.DataContext;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220428094125_AddingSeedData")]
    partial class AddingSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UserManagementAPI.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "green",
                            Description = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "blue",
                            Description = "User"
                        },
                        new
                        {
                            Id = 3,
                            Code = "yellow",
                            Description = "Approver"
                        },
                        new
                        {
                            Id = 4,
                            Code = "purple",
                            Description = "Financer"
                        },
                        new
                        {
                            Id = 5,
                            Code = "red",
                            Description = "Team lead"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "tomerovic@gmail.com",
                            FirstName = "Tarik",
                            LastName = "Omerovic",
                            Password = "password123",
                            Status = true,
                            UserName = "tomerovic"
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "hhamidovic@gmail.com",
                            FirstName = "Hamdo",
                            LastName = "Hamidovic",
                            Password = "password123",
                            Status = true,
                            UserName = "hhamidovic"
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "esmailovic@gmail.com",
                            FirstName = "Edin",
                            LastName = "Smailovic",
                            Password = "password123",
                            Status = true,
                            UserName = "esmailovic"
                        },
                        new
                        {
                            Id = 4,
                            EmailAddress = "emirrifatbegovic@gmail.com",
                            FirstName = "Emir",
                            LastName = "Rifetbegovic",
                            Password = "password123",
                            Status = true,
                            UserName = "emirrifatbegovic"
                        },
                        new
                        {
                            Id = 5,
                            EmailAddress = "dinoMuzaferlic@gmail.com",
                            FirstName = "Dino",
                            LastName = "Muzaferlic",
                            Password = "password123",
                            Status = true,
                            UserName = "dinomuzaferlic"
                        },
                        new
                        {
                            Id = 6,
                            EmailAddress = "amarsilajdzic@gmail.com",
                            FirstName = "Amar",
                            LastName = "Silajdzic",
                            Password = "password123",
                            Status = true,
                            UserName = "asilajdzic"
                        },
                        new
                        {
                            Id = 7,
                            EmailAddress = "kerimsarajlic@gmail.com",
                            FirstName = "Kerim",
                            LastName = "Sarajlic",
                            Password = "password123",
                            Status = true,
                            UserName = "kerimsarajlic"
                        },
                        new
                        {
                            Id = 8,
                            EmailAddress = "milanmilanovic@gmail.com",
                            FirstName = "Milan",
                            LastName = "Milanovic",
                            Password = "password123",
                            Status = true,
                            UserName = "mmilanovic"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.UserPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            UserId = 2,
                            PermissionId = 3
                        },
                        new
                        {
                            UserId = 3,
                            PermissionId = 1
                        },
                        new
                        {
                            UserId = 4,
                            PermissionId = 1
                        },
                        new
                        {
                            UserId = 5,
                            PermissionId = 2
                        });
                });

            modelBuilder.Entity("UserManagementAPI.UserPermission", b =>
                {
                    b.HasOne("UserManagementAPI.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementAPI.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Permission", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("UserManagementAPI.User", b =>
                {
                    b.Navigation("UserPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
